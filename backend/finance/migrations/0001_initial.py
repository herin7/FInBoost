# Generated by Django 5.0.1 on 2024-12-28 19:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('BILLS', 'Bills'), ('GROCERIES', 'Groceries'), ('ENTERTAINMENT', 'Entertainment'), ('CHARITY', 'Charity'), ('ECO_FRIENDLY', 'Eco Friendly'), ('SOCIAL_IMPACT', 'Social Impact'), ('OTHER', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('month', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('category', models.CharField(choices=[('BILLS', 'Bills'), ('GROCERIES', 'Groceries'), ('ENTERTAINMENT', 'Entertainment'), ('CHARITY', 'Charity'), ('ECO_FRIENDLY', 'Eco Friendly'), ('SOCIAL_IMPACT', 'Social Impact'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_frequency', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('month', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpensePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('BILLS', 'Bills'), ('GROCERIES', 'Groceries'), ('ENTERTAINMENT', 'Entertainment'), ('CHARITY', 'Charity'), ('ECO_FRIENDLY', 'Eco Friendly'), ('SOCIAL_IMPACT', 'Social Impact'), ('OTHER', 'Other')], max_length=20)),
                ('predicted_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('prediction_date', models.DateField()),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_paid', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialHealthScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('spending_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('social_impact_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SharedExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_settled', models.BooleanField(default=False)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.expense')),
                ('shared_with', models.ManyToManyField(through='finance.ExpenseShare', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='expenseshare',
            name='shared_expense',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.sharedexpense'),
        ),
        migrations.AddConstraint(
            model_name='budget',
            constraint=models.UniqueConstraint(fields=('user', 'category', 'month'), name='unique_budget_per_user_category_month'),
        ),
        migrations.AddConstraint(
            model_name='expense',
            constraint=models.UniqueConstraint(fields=('user', 'category', 'month'), name='unique_expense_per_user_category_month'),
        ),
        migrations.AddConstraint(
            model_name='expenseprediction',
            constraint=models.UniqueConstraint(fields=('user', 'category', 'prediction_date'), name='unique_prediction_per_user_category_date'),
        ),
        migrations.AddConstraint(
            model_name='financialhealthscore',
            constraint=models.UniqueConstraint(fields=('user', 'date'), name='unique_score_per_user_date'),
        ),
        migrations.AlterUniqueTogether(
            name='expenseshare',
            unique_together={('shared_expense', 'user')},
        ),
    ]
